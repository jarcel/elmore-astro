---
export interface FooterLinkProps {
  href: string
  label: string
  className?: string
  imgSrc?: string
  bgColor?: string
}

const { href, label, className = "", imgSrc, bgColor } = Astro.props
---

<div class={`footer-link ${className}`} style={`background-color: ${bgColor}`}>
  {
    imgSrc && (
      <div class="nl-image" style={`background-image: url('${imgSrc}')`} />
    )
  }
  <a href={href}>
    <span>{label}</span>
  </a>
</div>

<style lang="scss">
  @use "../styles/variables.scss" as vars;
  @use "sass:color";

  .footer-link {
    position: relative;
    background: vars.$el-pink;
    height: 10.4rem;

    @media (min-width: vars.$screen-sm) {
      height: 16rem;
    }

    @media (min-width: vars.$screen-md) {
      height: 26rem;
    }

    a {
      display: block;
      text-decoration: none;
      text-transform: uppercase;
      position: absolute;
      font-weight: 900;
      color: white;
      margin: 0;
      top: 0;
      left: 0;
      width: 100%;
      bottom: 0;
      z-index: 1;

      span {
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        text-align: center;
        transform: translateY(-50%) translateX(-50%);
        font-size: 4rem;
        line-height: 3rem;

        @media (min-width: vars.$screen-sm) {
          font-size: 7rem;
          line-height: 6rem;
        }

        @media (min-width: vars.$screen-md) {
          font-size: 10rem;
          line-height: 9rem;
        }
      }
    }

    &.next-link {
      background: vars.$body-grey;
      overflow: hidden;
      .nl-image {
        opacity: 0.7;
        transition: transform 4s vars.$nice-bezier;
        position: absolute;
        height: 100%;
        width: 100%;
        transform: translateZ(0);
        background-repeat: no-repeat;
        background-position: center center;
        background-size: cover;
        backface-visibility: hidden;
      }
      @media screen and (min-width: vars.$screen-md) {
        &:hover {
          .nl-image {
            transform: scale(1.1);
          }
        }
      }
    }

    &.dutch {
      background: vars.$el-pink;
    }

    &.books {
      background: color.adjust(vars.$el-pink, $lightness: 3%);
    }

    &.film {
      background: color.adjust(vars.$el-pink, $lightness: 8%);
    }

    &.news {
      background: color.adjust(vars.$el-pink, $lightness: 13%);
    }
  }
</style>
